name: 'YouTube Automation - Deploy & Seed Workflows'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '18' # Use latest LTS

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: üèóÔ∏è Checkout repository
      uses: actions/checkout@v3

    - name: üì¶ Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: üì• Install dependencies
      run: npm ci --legacy-peer-deps

    - name: üîç Run health checks
      run: npm run health

    - name: üîê Verify environment setup
      run: npm run verify-env
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        YOUTUBE_API_1: ${{ secrets.YOUTUBE_API_1 }}
        YOUTUBE_CHANNEL_1: ${{ secrets.YOUTUBE_CHANNEL_1 }}
        YOUTUBE_API_2: ${{ secrets.YOUTUBE_API_2 }}
        YOUTUBE_CHANNEL_2: ${{ secrets.YOUTUBE_CHANNEL_2 }}
        YOUTUBE_API_3: ${{ secrets.YOUTUBE_API_3 }}
        YOUTUBE_CHANNEL_3: ${{ secrets.YOUTUBE_CHANNEL_3 }}
        TELEGRAM_API_KEY: ${{ secrets.TELEGRAM_API_KEY }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

  deploy-and-seed:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only deploy from main branch

    steps:
    - name: üèóÔ∏è Checkout repository
      uses: actions/checkout@v3

    - name: üì¶ Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: üì• Install dependencies
      run: npm ci --legacy-peer-deps

    - name: üîê Set environment variables
      uses: xom9ikk/dotenv@v2
      with:
        # GitHub Secrets will be passed as environment variables
        path: . # or your path to .env file

    - name: üß™ Run comprehensive tests
      run: npm run test
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        YOUTUBE_API_1: ${{ secrets.YOUTUBE_API_1 }}
        YOUTUBE_CHANNEL_1: ${{ secrets.YOUTUBE_CHANNEL_1 }}
        YOUTUBE_API_2: ${{ secrets.YOUTUBE_API_2 }}
        YOUTUBE_CHANNEL_2: ${{ secrets.YOUTUBE_CHANNEL_2 }}
        YOUTUBE_API_3: ${{ secrets.YOUTUBE_API_3 }}
        YOUTUBE_CHANNEL_3: ${{ secrets.YOUTUBE_CHANNEL_3 }}
        TELEGRAM_API_KEY: ${{ secrets.TELEGRAM_API_KEY }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

    - name: üîç Verify environment configuration
      run: npm run verify-env
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        YOUTUBE_API_1: ${{ secrets.YOUTUBE_API_1 }}
        YOUTUBE_CHANNEL_1: ${{ secrets.YOUTUBE_CHANNEL_1 }}
        YOUTUBE_API_2: ${{ secrets.YOUTUBE_API_2 }}
        YOUTUBE_CHANNEL_2: ${{ secrets.YOUTUBE_CHANNEL_2 }}
        YOUTUBE_API_3: ${{ secrets.YOUTUBE_API_3 }}
        YOUTUBE_CHANNEL_3: ${{ secrets.YOUTUBE_CHANNEL_3 }}
        TELEGRAM_API_KEY: ${{ secrets.TELEGRAM_API_KEY }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

    - name: üå± Seed Supabase database
      run: npm run seed-supabase
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

    - name: üîÑ Auto-seed n8n workflows
      run: npm run import-workflows
      env:
        # n8n needs to be running to import workflows, so we'll import workflows directly
        # The actual workflow import happens during the deployment process to Railway
        echo "Workflow import will happen during Railway deployment"

    - name: üöÄ Deploy to Railway
      uses: uffish/releaser-action@v1
      with:
        railway_token: ${{ secrets.RAILWAY_TOKEN }}
        environment: production